{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","props","todos","selectTodo","selectedId","isSelected","todoId","length","className","map","todo","id","completed","title","type","onClick","TodoFilter","query","onSearch","filterType","onSelect","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","selectedTodo","userId","useState","isLoading","setIsLoading","user","setUser","useEffect","getUser","userFromServer","href","email","name","App","setSelectedTodo","setTodos","setQuery","setFilterType","todosFromServer","filteredTodos","useMemo","filter","filteredByQuery","toLowerCase","includes","toLocaleLowerCase","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5fa4b3b.chunk.js","sourcesContent":["import React from 'react';\nimport { Maybe } from '../../types/Maybe';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectTodo: (todo: Todo) => void;\n  selectedId: Maybe<number>;\n}\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const { todos, selectTodo, selectedId } = props;\n\n  const isSelected = (todoId: number) => todoId === selectedId;\n\n  return (\n    <>\n      {todos.length === 0\n        ? 'No todos yet'\n        : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {todos.map(todo => (\n                <tr\n                  data-cy=\"todo\"\n                  className={\n                    isSelected(todo.id)\n                      ? 'has-background-info-light'\n                      : ''\n                  }\n                  key={todo.id}\n                >\n                  <td className=\"is-vcentered\">{todo.id}</td>\n                  <td className=\"is-vcentered\">\n                    {todo.completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )}\n                  </td>\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className={`has-text-${todo.completed ? 'success' : 'danger'}`}>{todo.title}</p>\n                  </td>\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => selectTodo(todo)}\n                    >\n                      <span className=\"icon\">\n                        <i className={`far fa-eye${isSelected(todo.id) ? '-slash' : ''}`} />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","interface Props {\n  query: string;\n  onSearch: (query: string) => void;\n  filterType: string;\n  onSelect: (type: string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const {\n    query,\n    onSearch,\n    filterType,\n    onSelect,\n  } = props;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterType}\n            onChange={(event) => onSelect(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onSearch(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onSearch('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Maybe } from '../../types/Maybe';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  onClose: (selectedTodo: Maybe<Todo>) => void;\n  selectedTodo: Todo;\n}\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const {\n    onClose,\n    selectedTodo: {\n      id,\n      title,\n      completed,\n      userId,\n    },\n  } = props;\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<Maybe<User>>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(userId)\n      .then((userFromServer) => {\n        setUser(userFromServer);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClose(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              { completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Maybe } from './types/Maybe';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Maybe<Todo>>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filterType, setFilterType] = useState('all');\n\n  useEffect(() => {\n    getTodos()\n      .then((todosFromServer) => {\n        setTodos(todosFromServer);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const filteredTodos = useMemo(() => (\n    todos.filter(todo => {\n      const filteredByQuery = todo.title.toLowerCase().includes(query.toLocaleLowerCase());\n\n      if (filterType === 'all') {\n        return filteredByQuery;\n      }\n\n      if (filterType === 'active') {\n        return filteredByQuery && !todo.completed;\n      }\n\n      if (filterType === 'completed') {\n        return filteredByQuery && todo.completed;\n      }\n\n      return true;\n    })), [todos, query, filterType]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onSearch={setQuery}\n                filterType={filterType}\n                onSelect={setFilterType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  selectTodo={setSelectedTodo}\n                  selectedId={selectedTodo?.id || null}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal onClose={setSelectedTodo} selectedTodo={selectedTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}